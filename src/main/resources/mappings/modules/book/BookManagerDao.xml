<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.book.dao.BookManagerDao">
    
	<sql id="bookManagerColumns">
		a.id AS "id",
		a.book_name AS "bookName",
		a.author AS "author",
		a.author_introduce AS "authorIntroduce",
		a.book_imag_url AS "bookImagUrl",
		a.first_class_id AS "firstClassId.id",
		a.second_class_id AS "secondClassId.id",
		a.price AS "price",
		a.buy_link AS "buyLink",
		a.is_recommend AS "isRecommend",
		a.publish_date AS "publishDate",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.editor_recommend AS "editorRecommend",
		a.publishing_house AS "publishingHouse",
		a.publishing_date AS "publishingDate",
		a.language AS "language",
		a.specification AS "specification",
		a.place_of_publication AS "placeOfPublication",
		a.particulars AS "particulars",
		a.praise_num AS "praiseNum",
		a.collect_num AS "collectNum",
		a.recommend_num AS "recommendNum",
		a.book_type AS "bookType",
		a.hits AS "hits",
		a.soft_type AS "softType",
		<include refid="classificationtreeColumns"/>
	</sql>

	<sql id="classificationtreeColumns">
		b.name AS "firstClassId.name",
		b.parent_id AS "firstClassId.parent.id",
		c.name AS "secondClassId.name",
	    c.parent_id AS "secondClassId.parent.id"
	</sql>
	
	<sql id="bookManagerJoins">
		LEFT JOIN classificationtree b ON a.first_class_id = b.id
		LEFT JOIN classificationtree c ON a.second_class_id = c.id
	</sql>
    
	<select id="get" resultType="BookManager">
		SELECT 
			<include refid="bookManagerColumns"/>
		FROM book_manager a
		<include refid="bookManagerJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BookManager">
		SELECT 
			<include refid="bookManagerColumns"/>
		FROM book_manager a
		<include refid="bookManagerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="bookName != null and bookName != ''">
				AND a.book_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{bookName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{bookName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{bookName},'%')</if>
			</if>
			<if test="author != null and author != ''">
				AND a.author LIKE 
					<if test="dbName == 'oracle'">'%'||#{author}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{author}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{author},'%')</if>
			</if>
			<if test="firstClassId != null and firstClassId.id != null and firstClassId.id != ''">
				AND a.first_class_id = #{firstClassId.id}
			</if>
			<if test="secondClassId != null and secondClassId.id != null and secondClassId.id != ''">
				AND a.second_class_id = #{secondClassId.id}
			</if>
			<if test="isRecommend != null and isRecommend != ''">
				AND a.is_recommend = #{isRecommend}
			</if>
		</where>
		<choose>
			<when test="softType != null and softType != ''">
				ORDER BY ${softType} DESC
			</when>
			<when test="page != null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="BookManager">
		SELECT 
			<include refid="bookManagerColumns"/>
		FROM book_manager a
		<include refid="bookManagerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findByBookType" resultType="BookManager">
		SELECT
			<include refid="bookManagerColumns"/>
		FROM book_manager a
		<include refid="bookManagerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="bookType != null and bookType != '' ">
			AND a.book_type = #{bookType}
			</if>
			<if test="id != null and id != '' ">
			AND a.id != #{id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO book_manager(
			id,
			book_name,
			author,
			author_introduce,
			book_imag_url,
			first_class_id,
			second_class_id,
			price,
			buy_link,
			is_recommend,
			publish_date,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			editor_recommend,
			publishing_house,
			publishing_date,
			language,
			specification,
			place_of_publication,
			particulars,
			praise_num,
			collect_num,
			recommend_num,
			book_type,
			hits,
			soft_type
		) VALUES (
			#{id},
			#{bookName},
			#{author},
			#{authorIntroduce},
			#{bookImagUrl},
			#{firstClassId.id},
			#{secondClassId.id},
			#{price},
			#{buyLink},
			#{isRecommend},
			#{publishDate},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{editorRecommend},
			#{publishingHouse},
			#{publishingDate},
			#{language},
			#{specification},
			#{placeOfPublication},
			#{particulars},
			#{praiseNum},
			#{collectNum},
			#{recommendNum},
			#{bookType},
			#{hits},
			#{softType}
		)
	</insert>
	
	<update id="update">
		UPDATE book_manager SET 	
			book_name = #{bookName},
			author = #{author},
			author_introduce = #{authorIntroduce},
			book_imag_url = #{bookImagUrl},
			first_class_id = #{firstClassId.id},
			second_class_id = #{secondClassId.id},
			price = #{price},
			buy_link = #{buyLink},
			is_recommend = #{isRecommend},
			publish_date = #{publishDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			editor_recommend = #{editorRecommend},
			publishing_house = #{publishingHouse},
			publishing_date = #{publishingDate},
			language = #{language},
			specification = #{specification},
			place_of_publication = #{placeOfPublication},
			particulars = #{particulars},
			praise_num = #{praiseNum},
			collect_num = #{collectNum},
			recommend_num = #{recommendNum},
			book_type = #{bookType},
			hits = #{hits},
			soft_type = #{softType}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE book_manager SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>